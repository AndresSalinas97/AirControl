package i52salia.aircontrol.components;

import i52salia.aircontrol.utils.AirConditioner;
import java.awt.event.ActionListener;

/**
 * Java Swing Component (JPanel) to select the fan speed of an air conditioning
 * device.
 *
 * (Most of the code was automatically generated by NetBeans).
 *
 * @author Andr√©s Salinas Lima {@literal <i52salia@uco.es>}
 */
public class FanSpeedSelector extends javax.swing.JPanel {

    /**
     * Creates new form FanSpeedSelector
     */
    public FanSpeedSelector() {
        initComponents();
        
        comboBox.addItem("Low");
        comboBox.addItem("Medium");
        comboBox.addItem("High");
        comboBox.addItem("Auto");
    }
    
    /**
     * Selects the comboBox item that corresponds to the selected fan speed.
     * 
     * @param fs the selected fan speed.
     */
    public void setSelectedFanSpeed(AirConditioner.FanSpeed fs) {
        switch (fs) {
            case LOW:
                comboBox.setSelectedIndex(0);
                break;
            case MEDIUM:
                comboBox.setSelectedIndex(1);
                break;
            case HIGH:
                comboBox.setSelectedIndex(2);
                break;
            case AUTO:
                comboBox.setSelectedIndex(3);
                break;
        }
    }
    
    /**
     * @return the selected fan speed
     */
    public AirConditioner.FanSpeed getSelectedFanSpeed() {
        switch (comboBox.getSelectedIndex()) {
            case 0:
                return AirConditioner.FanSpeed.LOW;
            case 1:
                return AirConditioner.FanSpeed.MEDIUM;
            case 2:
                return AirConditioner.FanSpeed.HIGH;
            default:
                return AirConditioner.FanSpeed.AUTO;
        }
    }
    
    /**
     * Allows to add an ActionListener to the comboBox.
     * 
     * @param al the ActionListener
     */
    public void addActionListener(ActionListener al) {
        comboBox.addActionListener(al);
    }
    
    /**
     * Allows to enable/disable the comboBox.
     * 
     * @param b boolean indicating the comboBox enability
     */
    public void setEnabled(boolean b) {
        comboBox.setEnabled(b);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBox = new javax.swing.JComboBox();

        comboBox.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        add(comboBox);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboBox;
    // End of variables declaration//GEN-END:variables
}
