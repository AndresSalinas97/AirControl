package i52salia.aircontrol.panels;

import javax.swing.DefaultComboBoxModel;

/**
 * JPanel for the Settings tab.
 *
 * (Some of the code was automatically generated by NetBeans and should not be
 * modified to avoid conflicts with the IDE).
 *
 * @author Andrés Salinas Lima (i52salia@uco.es)
 */
public final class SettingsPanel extends javax.swing.JPanel {

    /**
     * Creates and initializes the JPanel.
     */
    public SettingsPanel() {
        initComponents();

        // Fill timeFormatComboBox with localized strings
        timeFormatComboBox.setModel(new DefaultComboBoxModel(new String[]{
            java.util.ResourceBundle.getBundle(
            "i52salia/aircontrol/resources/languagebundles/Bundle").getString(
            "SettingsPanel.TimeFormatBox.24"),
            java.util.ResourceBundle.getBundle(
            "i52salia/aircontrol/resources/languagebundles/Bundle").getString(
            "SettingsPanel.TimeFormatBox.12")
        }));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        settingsScrollPanel = new javax.swing.JScrollPane();
        containerPanel = new javax.swing.JPanel();
        settingsPanel = new javax.swing.JPanel();
        appSettingsLabel = new javax.swing.JLabel();
        LanguageLabel = new javax.swing.JLabel();
        languageComboBox = new javax.swing.JComboBox();
        tempUnitLabel = new javax.swing.JLabel();
        tempUnitComboBox = new javax.swing.JComboBox();
        timeFormatLabel = new javax.swing.JLabel();
        timeFormatComboBox = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        devicesLabel = new javax.swing.JLabel();
        devicesScrollPane = new javax.swing.JScrollPane();
        devicesList = new javax.swing.JList();
        addDeviceButton = new javax.swing.JButton();

        settingsScrollPanel.setBorder(null);

        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {200, 200};
        settingsPanel.setLayout(jPanel1Layout);

        appSettingsLabel.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("i52salia/aircontrol/resources/languagebundles/Bundle"); // NOI18N
        appSettingsLabel.setText(bundle.getString("SettingsPanel.AppSettings")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        settingsPanel.add(appSettingsLabel, gridBagConstraints);

        LanguageLabel.setText(bundle.getString("SettingsPanel.Language")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        settingsPanel.add(LanguageLabel, gridBagConstraints);

        languageComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "English", "Español" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        settingsPanel.add(languageComboBox, gridBagConstraints);

        tempUnitLabel.setText(bundle.getString("SettingsPanel.TempUnit")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        settingsPanel.add(tempUnitLabel, gridBagConstraints);

        tempUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Celsius (ºC)", "Fahrenheit (ºF)" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        settingsPanel.add(tempUnitComboBox, gridBagConstraints);

        timeFormatLabel.setText(bundle.getString("SettingsPanel.TimeFormat")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        settingsPanel.add(timeFormatLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        settingsPanel.add(timeFormatComboBox, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        settingsPanel.add(jSeparator1, gridBagConstraints);

        devicesLabel.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        devicesLabel.setText(bundle.getString("SettingsPanel.Devices")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        settingsPanel.add(devicesLabel, gridBagConstraints);

        devicesList.setEnabled(false);
        devicesScrollPane.setViewportView(devicesList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        settingsPanel.add(devicesScrollPane, gridBagConstraints);

        addDeviceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/i52salia/aircontrol/resources/images/add-icon.png"))); // NOI18N
        addDeviceButton.setText(bundle.getString("SettingsPanel.AddDevice")); // NOI18N
        addDeviceButton.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        settingsPanel.add(addDeviceButton, gridBagConstraints);

        containerPanel.add(settingsPanel);

        settingsScrollPanel.setViewportView(containerPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(settingsScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(settingsScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LanguageLabel;
    private javax.swing.JButton addDeviceButton;
    private javax.swing.JLabel appSettingsLabel;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JLabel devicesLabel;
    public javax.swing.JList devicesList;
    private javax.swing.JScrollPane devicesScrollPane;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JComboBox languageComboBox;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JScrollPane settingsScrollPanel;
    public javax.swing.JComboBox tempUnitComboBox;
    private javax.swing.JLabel tempUnitLabel;
    public javax.swing.JComboBox timeFormatComboBox;
    private javax.swing.JLabel timeFormatLabel;
    // End of variables declaration//GEN-END:variables
}
